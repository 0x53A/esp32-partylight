name: "Copilot Setup Steps"

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      # Setup Rust nightly toolchain with wasm32-unknown-unknown target
      - name: Setup Rust nightly toolchain
        run: |
          rustup update nightly
          rustup default nightly
          rustup set profile minimal
          rustup target add wasm32-unknown-unknown
          rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu

      # Install espup and ESP Rust toolchain
      - name: Install ESP Rust toolchain
        uses: esp-rs/xtensa-toolchain@v1.5
        with:
          default: true
          buildtargets: esp32s3
          ldproxy: false

      - name: Download and install Trunk binary
        working-directory: app
        run: wget -qO- https://github.com/thedodd/trunk/releases/latest/download/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-

      # Cache Rust dependencies
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            app
            mcu
